{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\r\n * 重写数组中的部分方法\r\n */\r\n\r\n// 获取数组的原型\r\nlet oldArrayProto = Array.prototype\r\n\r\nlet newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [ // 找到所有变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'splice',\r\n    'sort',\r\n    'reverse',\r\n]// concat slice 都不会改变原数组，所以不需要重写\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function (...args) {// 重写方法\r\n        // 内部调用原方法\r\n        const result = oldArrayProto[method].call(this,...args)\r\n\r\n        //对新增的数据再次劫持\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                inserted = args.slice(2);\r\n                break;\r\n            case'sort':\r\n            case'reverse':\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (inserted) {\r\n            ob.observeArray(inserted)\r\n        }\r\n\r\n        ob.dep.notify();// 数组变化了，通知watcher进行更新\r\n\r\n        return result\r\n    }\r\n})\r\n\r\nexport default newArrayProto","let id = 0;\r\n\r\nclass Dep{\r\n    constructor(){\r\n        this.id = id++;\r\n        this.subs = [];// 这里存放着当前属性对应的watcher有哪些\r\n    }\r\n\r\n    depend(){\r\n        // 这里不希望放重复的watcher\r\n        // this.subs.push(Dep.target)\r\n        Dep.target.addDep(this);// 让watcher记住dep\r\n    }\r\n\r\n    addSub(Watcher){\r\n        this.subs.push(Watcher);\r\n    }\r\n\r\n    notify(){\r\n        this.subs.forEach(watcher => {\r\n            watcher.update()\r\n        })\r\n    }\r\n}\r\n\r\nDep.target = null;\r\n\r\nlet stack = [];\r\n\r\nexport function pushStack(watcher){\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\n\r\nexport function popStack(){\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep","import newArrayProto from './array'\r\nimport Dep from './dep';\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // Object.deineProperty只能劫持已经存在的属性（vue会为此单独写一些api $set $delete）\r\n\r\n        /**\r\n         * 给数据加上一个标识，如果数据上有__ob__属性，则说明已经被劫持过了\r\n         * 但是在对象中增加__ob__后进入walk方法，会对__ob__进行监测，里边又会有walk导致进入死循环\r\n         * 所以设置__ob__为一个隐藏属性，不可被枚举\r\n         */\r\n\r\n        let dep = new Dep();\r\n\r\n        data.__ob__ = this;\r\n        Object.defineProperties({\r\n            value: this,\r\n            enumerables: false,// 设置__ob__为一个隐藏属性，循环时不会被获取\r\n        })\r\n        if(Array.isArray(data)){\r\n            // 对数组进行劫持：重写数组中的方法\r\n            data.__proto__ = newArrayProto;// 重写数组原型\r\n            this.observeArray(data);// 如果数组中监测的是对象，可以监控到对象的变化\r\n        }else{\r\n            this.walk(data);// 循环对象，对属性依次劫持\r\n        }\r\n    }\r\n\r\n    walk(data) {// 循环对象，对属性依次劫持\r\n\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => {\r\n            defineReactive(data, key, data[key]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 监测数组\r\n     * \r\n     */\r\n    observeArray(data){\r\n        data.forEach(item => {\r\n            observe(item);\r\n        })\r\n    }\r\n}\r\n\r\n//深层次嵌套会递归，递归多了性能差，不存在属性监控不到，存在的属性要重写方法vue3-> proxy\r\nfunction dependArray(value){\r\n    for(let i=0;i<value.length;i++){\r\n        let current = value[i];\r\n        current?.dep.depend();\r\n        if(Array.isArray(current)){\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function defineReactive(target, key, value) {// 闭包 属性劫持\r\n    let childob = observe(key);// 如果仍旧是一个对象，则递归劫持 childOb.dep用来收集依赖\r\n\r\n    let dep = new Dep();\r\n    Object.defineProperty(target, key, {\r\n        get() {// 取值的时候会执行get\r\n            if(Dep.target){\r\n                dep.depend();// 让这个属性的收集器记住当前的watcher\r\n                if(childob){\r\n                    childob.dep.depend();// 让数组和对象本身也能实现依赖收集\r\n                    if(Array.isArray(value)){\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        set(newValue) {// 赋值的时候会执行set\r\n            if(newValue === value) return;\r\n            observe(newValue);\r\n            value = newValue;\r\n            dep.notify();\r\n        },\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 对这个对象进行劫持\r\n\r\n    if (typeof data!== 'object' || data === null) {\r\n        return;// 只对对象进行劫持\r\n    }\r\n\r\n    // 如果一个对象被劫持过，则不再劫持\r\n    // 判断一个对象是否被接触过，可以增添一个实例，用实例来判断是否被劫持过\r\n    if (data.__ob__ instanceof Observer) {\r\n        return data.__ob__;\r\n    }\r\n\r\n    return new Observer(data);\r\n}","import { observe } from './observe/index.js'\r\n\r\nexport function initState(vm){\r\n    const opts = vm.$options; // 获取用户的选项\r\n\r\n    // if(opts.props){\r\n    //     initProps(vm, opts.props);\r\n    // }\r\n\r\n    if(opts.data){\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm,target,key){// 让data数据能够直接从实例上获取\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[target][key];\r\n        },\r\n        set(newVal){\r\n            vm[target][key] = newVal;\r\n        }\r\n    });\r\n}\r\n\r\nfunction initData(vm){\r\n    let data = vm.$options.data;\r\n\r\n    /**\r\n     * 这里源代码是直接使用data.call(vm)\r\n     * 我实现时若data为function执行之后仍旧是function，所以这里将data覆盖，以此得到data的返回值\r\n     */\r\n    typeof data === 'function'? data = data.call(vm) : data;\r\n\r\n    vm._data = data;// 无论data是function还是object，都要处理成object绑定到vm实例上\r\n    // 劫持数据，vue2采用 defineProperty\r\n    observe(data);\r\n\r\n\r\n    // 将vm._data用vm来代理就可以了\r\n    for(let key in data){\r\n        proxy(vm,'_data',key);\r\n    }\r\n}","const ncname =`[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnamecapture =`((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnamecapture}`); // 标签开始\r\nconst endTag = new RegExp(`^<\\\\/${qnamecapture}[^>]*>`);// 标签结束\r\nconst attribute = /^\\s*([^\\s<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>]+)))?/; \r\nconst startTagClose=/^s*(\\/?)>/; // <div><br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// vue3不是采用正则，而是每个字符进行匹配\r\n\r\n/**\r\n * 解析html\r\n * 思路：解析一段就删除一段，直至没有能解析的数据\r\n */\r\n\r\n\r\nexport function parseHTML(html){\r\n     /**\r\n     * 解析到标签、文本、结尾时的处理函数\r\n     * 最终要生成一颗抽象语法树\r\n     * 利用栈来实现，类似于括号匹配\r\n     */\r\n    const ELMENTTYPE = 1;\r\n    const TEXTTYPE = 3;\r\n    const stack = [];// 用于存放元素\r\n    let currentParent;// 栈顶指针\r\n    let root;\r\n\r\n    function createASTElement(tag, attrs){\r\n        return {\r\n            tag,\r\n            type: ELMENTTYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag,attrs){\r\n        // console.log('开始',tag,attrs);\r\n        let node = createASTElement(tag, attrs);\r\n        if(!root){\r\n            root = node;\r\n        }\r\n        if(currentParent){\r\n            node.parent = currentParent;\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        currentParent = node;\r\n    }\r\n    function chars(text){\r\n        // console.log('文本',text);\r\n        text = text.replace(/\\s/g,'');\r\n        text && currentParent.children.push({\r\n            type: TEXTTYPE,\r\n            text,\r\n            parent: currentParent\r\n        });\r\n    }\r\n    function end(tag){\r\n        // console.log('结束',tag);\r\n        stack.pop();\r\n        currentParent = stack[stack.length-1];\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 解析HTML主体代码\r\n     */\r\n    function advance(n){// 向前移动n个字符(刪除)\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag(){\r\n        const start = html.match(startTagOpen); // 匹配开始标签\r\n        if(start){\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n\r\n\r\n            let end, attr;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n                advance(attr[0].length);\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5] || true\r\n                })\r\n            }\r\n    \r\n            if(end){\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n\r\n        return false;// 不是开始标签\r\n    }\r\n\r\n    while(html){// 一定是<开始\r\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n        // 如果textEnd >@说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd == 0){\r\n            const startTagMatch = parseStartTag();\r\n\r\n            if(startTagMatch){// 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n\r\n            let endTagMatch = html.match(endTag);\r\n            if(endTagMatch){// 解析到的结束标签\r\n                end(endTagMatch[1]);\r\n                advance(endTagMatch[0].length);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if(textEnd > 0){// 解析文本内容\r\n            let text = html.substring(0, textEnd);\r\n            if(text){\r\n                chars(text);\r\n                advance(textEnd);\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}","import { parseHTML } from './parse'\r\n\r\nfunction genProps(attrs){\r\n    let str = '';\r\n    for(let i = 0; i < attrs.length; i++){\r\n        let attr = attrs[i];\r\n\r\n        if(attr.name === 'style'){\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                if(typeof value == 'string'){\r\n                    value = value.trim()\r\n                }\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n    }\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\n\r\nfunction genChildren(children){\r\n    return children.map(child => gen(child)).join(',');\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;// 用于匹配{{}}\r\nfunction gen(node){\r\n    if(node.type === 1){\r\n        return codegen(node);\r\n    }else{\r\n        let text = node.text;\r\n        if(!defaultTagRE.test(text)){\r\n            return `_v('${text}')`\r\n        }else{\r\n            let tokens = [];\r\n            let match\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)){\r\n                let index = match.index;\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\n\r\nfunction codegen(ast){\r\n    let children = ast.children;\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : null},${children.length > 0 ? genChildren(children) : ''})`)\r\n\r\n    return code;\r\n}\r\n\r\n\r\nexport function compileToFunction(template){\r\n    //1.就是将template 转化成ast语法树\r\n\r\n    let ast = parseHTML(template); // 解析html模板\r\n    console.log('ast',ast);\r\n\r\n    //2.生成render方法(render方法返回的结果就是 虚拟D0M)\r\n    // codegen(ast); // 生成render方法\r\n    let code = codegen(ast);\r\n\r\n    console.log(code,'code');\r\n    // 模板引擎的实现原理就是with + new Function\r\n    let render = new Function(`with(this){return ${code}}`);\r\n\r\n    return render;\r\n}","import Dep, { popStack, pushStack } from \"./dep\";\r\n\r\n\r\nlet id = 0;\r\n\r\nclass Watcher{// 不同的的组件有不同的watcher\r\n    constructor(vm,fn,options){\r\n        this.id = id++;\r\n\r\n        this.renderWatcher = options;// 标识是一个渲染watcher\r\n        this.getter = fn;// getter会发生取值操作\r\n\r\n        this.deps = [];\r\n        this.depsId = new Set();\r\n\r\n        this.get();\r\n    }\r\n\r\n    get(){\r\n        // Dep.target = this;// 静态属性，只有一份\r\n        pushStack(this);\r\n        this.getter();// 会去vm上取值，vm._update(vm._render())\r\n        // Dep.target = null;// 渲染完毕后就清空\r\n        popStack();\r\n    }\r\n\r\n    addDep(dep){\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);// watcher已经记住了dep并且已经去重，此时让dep记住watcher即可\r\n        }\r\n    }\r\n\r\n    update(){// 执行更新\r\n        // this.get();// 重新渲染\r\n        queueWatcher(this);// 把当前的watcher保存起来\r\n    }\r\n\r\n    run(){\r\n        this.get();// 真正执行渲染\r\n    }\r\n}\r\n\r\n\r\n\r\n// notify更新操作（异步）\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false;// 防抖\r\n\r\nfunction flushSchedulerQueue(){\r\n    let flushQueue = queue.slice(0);\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    flushQueue.forEach(q=>q.run());\r\n\r\n}\r\n\r\nfunction queueWatcher(watcher){\r\n    const id = watcher.id;\r\n    if(!has[id]){\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n\r\n        // 不管update执行多少次，最终只会有一轮刷新操作\r\n        if(!pending){\r\n            nextTick(flushSchedulerQueue,0);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallBacks(){\r\n    let cbs = callbacks.slice(0);\r\n    waiting = false;\r\n    callbacks = [];\r\n    cbs.forEach(cb=>cb());\r\n}\r\n\r\n// vue中nextTick 没有直接使用某个api 而是采用优雅降级的方式\r\n//内部先采用的是promise(ie不兼容) Mutation0bserver 可以考虑ie专享的 setImmediate\r\n// 使异步更新方案能兼容各种浏览器\r\nlet timerFunc;\r\nif(Promise){\r\n    timerFunc = ()=>{\r\n        Promise.resolve().then(flushCallBacks);\r\n    }\r\n}else if(MutationObserver){\r\n    let observer = new MutationObserver(flushCallBacks);// 这里回调是异步执行的\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode,{\r\n        characterData:true,\r\n    });\r\n    timerFunc = ()=>{\r\n        textNode.textContent = 2;\r\n    }\r\n}else if(setImmediate){\r\n    setImmediate(flushCallBacks);\r\n}else{\r\n    timerFunc = ()=> {\r\n        setTimeout(flushCallBacks);\r\n    }\r\n}\r\n\r\nexport function nextTick(cb){\r\n    callbacks.push(cb);\r\n    if(!waiting){\r\n        // setTimeout(()=>{\r\n        //     flushCallBacks();\r\n        // },0)\r\n        timerFunc();\r\n        waiting = true;\r\n    }\r\n}\r\n\r\n\r\nexport default Watcher","/**\r\n * _c\r\n */\r\nexport function createElement(vm,tag,data,...children){\r\n    if(data == null){\r\n        data = {}\r\n    }\r\n    let key = data.key;\r\n    if(key){\r\n        delete data.key\r\n    }\r\n    return vnode(vm,tag,key,data,children)\r\n}\r\n\r\n/**\r\n * _v\r\n */\r\nexport function createTextNode(vm,text){\r\n    return vnode(vm,undefined,undefined,undefined,undefined,text)\r\n}\r\n\r\nfunction vnode(vm,tag,key,props,children,text){\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        props,\r\n        children,\r\n        text,\r\n        // ...\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElement, createTextNode } from \"./vdom/index\";\r\n\r\n/**\r\n * 创建真实节点\r\n */\r\nfunction createElm(vnode){\r\n    let {tag,props,children,text} = vnode;\r\n    if(typeof tag === 'string'){\r\n        vnode.el = document.createElement(tag);\r\n        patchProps(vnode.el,props)\r\n        children.forEach(child=>{\r\n            vnode.el.appendChild(createElm(child));\r\n        })\r\n    }else{// 文本节点\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction patchProps(el,props){\r\n    for(let key in props){\r\n        if(key === 'style'){\r\n            for(let styleName in props.style){\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        }else{\r\n            el.setAttribute(key,props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode,vnode){\r\n    const isRealNode = oldVNode.nodeType;\r\n    if(isRealNode){\r\n        const elm = oldVNode;// 获取到真实元素\r\n        const parentElm = elm.parentNode;// 获取父元素\r\n\r\n        let newElm = createElm(vnode);\r\n        parentElm.insertBefore(newElm,elm.nextSibling);\r\n        parentElm.removeChild(elm);\r\n\r\n        return newElm;\r\n    }else{\r\n        // diff算法\r\n    }\r\n}\r\n\r\nexport function initLifecycle(Vue) {\r\n    Vue.prototype._update = function(vnode) {// 将虚拟dom转化成真实dom   \r\n        const vm = this;\r\n        const el = vm.$el;\r\n        //既有初始化功能，又有更新功能\r\n        vm.$el = patch(el,vnode);\r\n    }\r\n\r\n    Vue.prototype._render = function() {\r\n        const vm = this;\r\n        return vm.$options.render.call(vm);// render内部的this设置为vm\r\n    }\r\n    // render函数内部的函数\r\n    Vue.prototype._c = function(){\r\n        return createElement(this,...arguments)\r\n    }\r\n    Vue.prototype._v = function(){\r\n        return createTextNode(this,...arguments)\r\n    }\r\n    Vue.prototype._s = function(value){\r\n        if(typeof value == 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n\r\n}\r\n\r\nexport function mountComponent(vm,el) {\r\n    vm.$el = el\r\n    // 1.调用render方法，生成虚拟dom\r\n\r\n    const updateComponent = function(){\r\n        vm._update(vm._render());\r\n    }\r\n    const watcher = new Watcher(vm,updateComponent,true);// true标识是一个渲染watcher\r\n    console.log('watcher',watcher);\r\n\r\n    // 2.根据虚拟dom生成真实dom\r\n\r\n    \r\n    // 3.将真实dom挂载到el上\r\n}\r\n\r\n\r\n//vue核心流程 1、创造力响应式数据；2、模板转换成ast语法树\r\n// 3、将ast语法树转换成render函数 4、后续每次数据更新可以只执行render函数（无需再次执行ast转化的过程）\r\n\r\n// render函数会产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实dom","import { initState } from './state'\r\nimport { compileToFunction } from './compiler/index'\r\nimport { mountComponent } from './lifecycle';\r\n\r\n\r\nexport function initMixin(Vue){// 给Vue增加init方法\r\n    Vue.prototype._init = function(options){\r\n        // 初始化操作\r\n        const vm = this;\r\n        vm.$options = options;// 将用户的选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        if(options.el){\r\n            vm.$mount(options.el);// 实现数据的挂载\r\n        }\r\n    }\r\n\r\n\r\n    Vue.prototype.$mount = function(el){\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n\r\n        if(!ops.render){// 先查看有没有render函数\r\n            let template;// 没有render看下是否写了template，没写template采用外部的模板\r\n            if(!ops.template&&el){// 没有写模板，但是写了el\r\n                template = el.outerHTML;\r\n            }else{\r\n                if(el){\r\n                    template = ops.template; // 如果有el，则采用模板的内容\r\n                }\r\n            }\r\n \r\n            // 写了template，就用写了的template\r\n            if(template){\r\n                // 对模版编译\r\n                const render = compileToFunction(template);// 将模板编译成render函数\r\n                ops.render = render; // jsx最终会被编译成 h('xxx')\r\n            }\r\n        }\r\n\r\n        // ops.render;\r\n        mountComponent(vm,el); \r\n    }\r\n}\r\n\r\n","import { initMixin } from './init'\r\nimport { initLifecycle } from './lifecycle'\r\n\r\n\r\nfunction Vue(options){// options是用户的选项\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue);// 扩展了init方法\r\ninitLifecycle(Vue)// 扩展了生命周期方法\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","Watcher","push","watcher","update","stack","pushStack","popStack","pop","Observer","data","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","i","current","childob","defineProperty","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","newVal","_data","ncname","qnamecapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELMENTTYPE","TEXTTYPE","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","chars","text","replace","end","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","trim","JSON","stringify","genChildren","map","child","gen","join","defaultTagRE","codegen","test","tokens","lastIndex","exec","index","ast","code","compileToFunction","template","console","log","render","Function","fn","options","renderWatcher","getter","deps","depsId","Set","has","add","queueWatcher","run","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallBacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","createElement","vnode","undefined","props","createElm","el","patchProps","appendChild","styleName","style","setAttribute","patch","oldVNode","isRealNode","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifecycle","Vue","_update","$el","_render","_c","_v","_s","mountComponent","updateComponent","initMixin","_init","$mount","querySelector","ops","outerHTML"],"mappings":"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"}